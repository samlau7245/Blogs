{"remainingRequest":"/Users/sam/Desktop/book/vuepress-starter/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/sam/Desktop/book/vuepress-starter/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/sam/Desktop/book/vuepress-starter/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/sam/Desktop/book/vuepress-starter/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/sam/Desktop/book/vuepress-starter/docs/FrontClint/objc/section3/README.md?vue&type=template&id=0132b185&","dependencies":[{"path":"/Users/sam/Desktop/book/vuepress-starter/docs/FrontClint/objc/section3/README.md","mtime":1634548748059},{"path":"/Users/sam/Desktop/book/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sam/Desktop/book/vuepress-starter/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/sam/Desktop/book/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sam/Desktop/book/vuepress-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sam/Desktop/book/vuepress-starter/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJoMSIsIHsgYXR0cnM6IHsgaWQ6ICJoMSIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjaDEiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIikKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiBIMSIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIlRoZSBhY2N1cmFjeSBvZiBkYXRhIHJlbGF0ZWQgdG8gQ2hpbmHigJlzIGVjb25vbXksIHdoaWNoIGZvciBtYW55IHllYXJzIGhhcyBiZWVuIHRoZSBiaWdnZXN0IGRyaXZlciBvZiBnbG9iYWwgZ3Jvd3RoLCB0b29rIGNlbnRlciBzdGFnZSBhdCB0aGUgcGFzdCB3ZWVr4oCZcyBJTUYgYW5kIFdvcmxkIEJhbmsgbWVldGluZ3MuIFRoZSBjb250cm92ZXJzeSBmb2N1c2VkIG9uIGFsbGVnYXRpb25zIHRoYXQgSU1GIE1hbmFnaW5nIERpcmVjdG9yIEtyaXN0YWxpbmEgR2VvcmdpZXZhIHByZXNzdXJlZCBjb2xsZWFndWVzLCB3aGlsZSBzaGUgd2FzIGEgdG9wIG9mZmljaWFsIGF0IHRoZSBXb3JsZCBCYW5rLCB0byBmaW5kIGEgd2F5IHRvIGJvb3N0IENoaW5h4oCZcyBzdGFuZGluZyBpbiB0aGUgb3JnYW5pemF0aW9u4oCZcyBmbGFnc2hpcCAyMDE4IOKAnERvaW5nIEJ1c2luZXNz4oCdIHJlcG9ydC4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJoMiIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjaDIiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIikKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiBIMiIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkdlb3JnaWV2YSBoYXMgZGVuaWVkIGFueSB3cm9uZ2RvaW5nLiBUaGUgSU1GIGJvYXJkLCB3aGljaCBjb252ZW5lZCBlaWdodCB0aW1lcyB0byBjb25zaWRlciBoZXIgZmF0ZSwgY29uZHVjdGVkIGEgcmV2aWV3IG9mIHRoZSBhbGxlZ2F0aW9ucyB0aGF0IOKAnGRpZCBub3QgY29uY2x1c2l2ZWx5IGRlbW9uc3RyYXRlIHRoYXQgdGhlIG1hbmFnaW5nIGRpcmVjdG9yIHBsYXllZCBhbiBpbXByb3BlciByb2xlLuKAnSBUaGUgYm9hcmQgcmVhZmZpcm1lZCBpdHMgY29uZmlkZW5jZSBpbiBHZW9yZ2lldmHigJlzIGxlYWRlcnNoaXAsIGJ1dCB0aGUgY29udHJvdmVyc3kgaXMgbGlrZWx5IHRvIGNvbnRpbnVlLiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogImgzIiB9IH0sIFsKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNoMyIgfSB9LCBbCiAgICAgICAgICBfdm0uX3YoIiMiKQogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiIEgzIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiVGhlIHN1YnRleHQgaXMgdGhhdCBhbnkgaW50ZXJuYXRpb25hbC1pbnN0aXR1dGlvbiBsZWFkZXIgbXVzdCBtYW5hZ2UgdGhlIHJlYWxpdHkgdGhhdCBDaGluYSB3aWxsIGluY3JlYXNpbmdseSBhY3QgdG8gaW5mbHVlbmNlLCBsZWFkLCBvciByZXBsYWNlIHRoZSB3b3JsZOKAmXMgbW9zdCBzaWduaWZpY2FudCBtdWx0aWxhdGVyYWwgYm9kaWVz4oCUaW4gdGhpcyBjYXNlLCBvbmUgb2YgdGhlIHdvcmxk4oCZcyBsZW5kZXJzIG9mIGxhc3QgcmVzb3J0LiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIlRoaXMgd2Vlaywgc2VuaW9yIGdvdmVybm1lbnQgb2ZmaWNpYWxzIGluIFdhc2hpbmd0b24sIERDLCByZXByZXNlbnRpbmcgdGhlIHdvcmxk4oCZcyBtb3N0IGltcG9ydGFudCBlY29ub21pZXMsIGhhZCBwbGVudHkgZWxzZSB0byB3b3JyeSBhYm91dDogYW4gdW5mb2xkaW5nIGVuZXJneSBjcmlzaXMsIHJpc2luZyBpbmZsYXRpb24sIHNsb3dpbmcgZ3Jvd3RoLCBhbmQgaW5jcmVhc2luZyBjbGltYXRlIGNvbmNlcm5zIGFoZWFkIG9mIHRoZSAyMDIxIFVuaXRlZCBOYXRpb25zIENsaW1hdGUgQ2hhbmdlIENvbmZlcmVuY2UsIG9yIENPUDI2LCB0aGF0IGJlZ2lucyBvbiBPY3RvYmVyIDMxIGluIEdsYXNnb3csIFNjb3RsYW5kLiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogImgyLTIiIH0gfSwgWwogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI2gyLTIiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIikKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiBIMiIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkEgc2VuaW9yIG9mZmljaWFsIGZyb20gb25lIG9mIHRoZSBtb3N0IHNpZ25pZmljYW50IFVTIGFsbGllcywgc3BlYWtpbmcgYW5vbnltb3VzbHksIHNhaWQgYWxsIG9mIHRoaXMgaGFzIGJlZW4gbWFkZSBtb3JlIGRpZmZpY3VsdCB0byBtYW5hZ2UgZHVlIHRvIHRoZSBncm93aW5nIHZvbGF0aWxpdHkgaW4gVVMtQ2hpbmEgcmVsYXRpb25zLCBnZW5lcmF0ZWQgYnkgYm90aCB0aGUgY291bnRyaWVz4oCZIGRpZmZlcmVuY2VzIGFuZCB0aGVpciBkb21lc3RpYyByZWFsaXRpZXMuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiQ2hpbmEgaXMgbHVyY2hpbmcgaW4gYSBtb3JlIGF1dGhvcml0YXJpYW4gZGlyZWN0aW9uIGF0IGhvbWUgYW5kIHRvd2FyZCBtb3JlIGNvbmZyb250YXRpb25hbCBwb2xpY2llcyBhYnJvYWQgYXMgaXQgZmxleGVzIGl0cyByZWdpb25hbCBhbmQgZ2xvYmFsIG11c2NsZXMuIEFtaWQgbWVzc3kgYW5kIHBvbGFyaXppbmcgVVMgcG9saXRpY3MsIGZvbGxvd2luZyBhIGJhZGx5IGV4ZWN1dGVkIHdpdGhkcmF3YWwgZnJvbSBBZmdoYW5pc3RhbiwgYW5kIHdpdGggYSBsYWNrIG9mIGNsYXJpdHkgYWJvdXQgVVMgc3RyYXRlZ3kgdG93YXJkIEJlaWppbmcsIHBhcnRuZXJzIHdvbmRlciBhYm91dCBVUyBjb21taXRtZW50LCBjb21wZXRlbmNlLCBhbmQgY2FwYWJpbGl0eSBmb3IgZ2xvYmFsIGNvbW1vbiBjYXVzZS4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJUaGUgc2VuaW9yIGFsbGllZCBvZmZpY2lhbCBzYWlkIHRoZWlyIGNvdW50cnnigJlzIGdyZWF0ZXN0IG1lZGl1bS0gYW5kIGxvbmctdGVybSBlY29ub21pYyByaXNrIGlzIGdldHRpbmcgZW5ndWxmZWQgYnkgYSBVUy1DaGluYSBjb250ZXN0IHNwYXJrZWQgYnkgdGVuc2lvbnMgdGhhdCBib2lsIG92ZXIuIOKAnEZldyBvZiB1cyBjYW4gYWZmb3JkIHRvIG1ha2UgYSBkZWNpc2lvbiBiZXR3ZWVuIHRoZSBVUyBhbmQgQ2hpbmEs4oCdIHRoZSBvZmZpY2lhbCBzYWlkLiDigJxTbyBwbGVhc2UgZG9u4oCZdCBhc2sgdXMgdG8gZG8gc28u4oCdIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAiaDMtMiIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjaDMtMiIgfSB9LCBbCiAgICAgICAgICBfdm0uX3YoIiMiKQogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiIEgzIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiSXQgaXNu4oCZdCB0aGF0IFVTIGFsbGllcyBhcmUgbmHDr3ZlIGFib3V0IHRoZSB1bmZvcnR1bmF0ZSBjb3Vyc2UgQ2hpbmVzZSBQcmVzaWRlbnQgWGkgSmlucGluZyBpcyBzZXR0aW5nIGZvciBoaXMgY291bnRyeS4gSXTigJlzIGp1c3QgdGhhdCBhIGdyZWF0IG1hbnkgb2YgdGhlbSBoYXZlIENoaW5hIGFzIHRoZWlyIG51bWJlciBvbmUgdHJhZGluZyBwYXJ0bmVy4oCUaW5jbHVkaW5nIHRoZSBFdXJvcGVhbiBVbmlvbiBhcyBhIHdob2xlLCBHZXJtYW55LCBKYXBhbiwgU291dGggS29yZWEsIFNhdWRpIEFyYWJpYSwgYW5kIHRoZSBVbml0ZWQgQXJhYiBFbWlyYXRlcy4gQ2hpbmEgcmVwcmVzZW50ZWQgbmVhcmx5IDMwIHBlcmNlbnQgb2YgZ2xvYmFsIGdyb3d0aCBiZXR3ZWVuIDIwMTMgYW5kIDIwMTgsIG1vcmUgdGhhbiBkb3VibGUgdGhhdCBvZiB0aGUgVW5pdGVkIFN0YXRlcy4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoNCIsIHsgYXR0cnM6IHsgaWQ6ICJoNCIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjaDQiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIikKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiBINCIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS1zaCBsaW5lLW51bWJlcnMtbW9kZSIgfSwgWwogICAgICAgIF9jKCJwcmUiLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJsYW5ndWFnZS1zaCIgfSB9LCBbCiAgICAgICAgICBfYygiY29kZSIsIFsKICAgICAgICAgICAgX3ZtLl92KCJpbmZvOiAiKSwKICAgICAgICAgICAgX2MoInNwYW4iLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJ0b2tlbiBudW1iZXIiIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiOSIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfdm0uX3YoIiBwbHVnaW5zIGFyZSBpbnN0YWxsZWQgXG5pbmZvOiAiKSwKICAgICAgICAgICAgX2MoInNwYW4iLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJ0b2tlbiBudW1iZXIiIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiOCIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfdm0uX3YoIiBleHBsaWNpdGx5IGxpc3RlZCBcbmluZm86IGxvYWRpbmcgcGx1Z2luICIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIHN0cmluZyIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCciYW5jaG9yLW5hdmlnYXRpb24tZXgiJykKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAidG9rZW4gcHVuY3R1YXRpb24iIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiLi4iKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl92KCIuIE9LIFxuaW5mbzogbG9hZGluZyBwbHVnaW4gIiksCiAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAidG9rZW4gc3RyaW5nIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoJyJsaXZlcmVsb2FkIicpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIHB1bmN0dWF0aW9uIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIi4uIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiLiBPSyBcbmluZm86IGxvYWRpbmcgcGx1Z2luICIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIHN0cmluZyIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCciaGlnaGxpZ2h0IicpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIHB1bmN0dWF0aW9uIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIi4uIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiLiBPSyBcbmluZm86IGxvYWRpbmcgcGx1Z2luICIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIHN0cmluZyIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCcic2VhcmNoIicpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIHB1bmN0dWF0aW9uIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIi4uIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiLiBPSyBcbmluZm86IGxvYWRpbmcgcGx1Z2luICIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIHN0cmluZyIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCcibHVuciInKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoInNwYW4iLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJ0b2tlbiBwdW5jdHVhdGlvbiIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCIuLiIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfdm0uX3YoIi4gT0sgXG5pbmZvOiBsb2FkaW5nIHBsdWdpbiAiKSwKICAgICAgICAgICAgX2MoInNwYW4iLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJ0b2tlbiBzdHJpbmciIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdignInNoYXJpbmciJykKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAidG9rZW4gcHVuY3R1YXRpb24iIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiLi4iKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl92KCIuIE9LIFxuaW5mbzogbG9hZGluZyBwbHVnaW4gIiksCiAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAidG9rZW4gc3RyaW5nIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoJyJmb250c2V0dGluZ3MiJykKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAidG9rZW4gcHVuY3R1YXRpb24iIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiLi4iKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl92KCIuIE9LIFxuaW5mbzogbG9hZGluZyBwbHVnaW4gIiksCiAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAidG9rZW4gc3RyaW5nIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoJyJ0aGVtZS1kZWZhdWx0IicpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIHB1bmN0dWF0aW9uIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIi4uIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiLiBPSyBcbmluZm86IGZvdW5kICIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIG51bWJlciIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCIxIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiIHBhZ2VzIFxuaW5mbzogZm91bmQgIiksCiAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAidG9rZW4gbnVtYmVyIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIjIiKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl92KCIgYXNzZXQgZmlsZXMgXG4iKQogICAgICAgICAgXSkKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVycy13cmFwcGVyIiB9LCBbCiAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIgfSwgW192bS5fdigiMSIpXSksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIiB9LCBbX3ZtLl92KCIyIildKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXIiIH0sIFtfdm0uX3YoIjMiKV0pLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIgfSwgW192bS5fdigiNCIpXSksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIiB9LCBbX3ZtLl92KCI1IildKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXIiIH0sIFtfdm0uX3YoIjYiKV0pLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIgfSwgW192bS5fdigiNyIpXSksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIiB9LCBbX3ZtLl92KCI4IildKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXIiIH0sIFtfdm0uX3YoIjkiKV0pLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIgfSwgW192bS5fdigiMTAiKV0pLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIgfSwgW192bS5fdigiMTEiKV0pLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIgfSwgW192bS5fdigiMTIiKV0pLAogICAgICAgICAgX2MoImJyIikKICAgICAgICBdKQogICAgICBdKQogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}